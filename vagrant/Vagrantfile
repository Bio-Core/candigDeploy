
#require 'getoptlong'

#opts = GetoptLong.new(
#  [ '--vagrant-ip', GetoptLong::OPTIONAL_ARGUMENT ]
#)

#vagrantIP=''

#opts.each do |opt, arg|
#  case opt
#    when '--vagrant-ip'
#      vagrantIP=arg
#  end
#end

vagrantIP='127.0.0.1'

# add to user shell
# env_var_cmd = ""
if ENV['VAGRANT_IP']
   vagrantIP = ENV['VAGRANT_IP']
end

puts "vagrant IP"
puts vagrantIP

Vagrant.configure("2") do |config|

  config.vm.box = "bento/ubuntu-16.04"

  config.vm.network "forwarded_port", guest: 8000, host: 8000
  config.vm.network "forwarded_port", guest: 8080, host: 8080

  config.vm.network "private_network", ip: vagrantIP

  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
  end

  # sync the deployer with the vagrant container
  config.vm.synced_folder "..", "/home/vagrant/candig-deploy"

  # install singularity
  config.vm.provision "shell" do |s|
    s.inline = %Q(

    cd /home/vagrant

    # install tools needed for singularity make
    apt-get update  --fix-missing
    apt-get install -y python dh-autoreconf build-essential squashfs-tools

    # clone & make & install singularity
    git clone https://github.com/singularityware/singularity.git 
    
    cd /home/vagrant/singularity
    ./autogen.sh
    ./configure --prefix=/usr/local --sysconfdir=/etc
    make
    make install

    # create, bootstrap/build singularity ga4gh image and then run container

    cd /home/vagrant/candig-deploy

    # run the deployer script to deploy singularity containers
    python /home/vagrant/candig-deploy/deployer.py -s -rc -i ${1} deploy

    # sudo singularity build --writable keycloak.img keycloakSingularity
    # sudo singularity build --writable ga4gh-server.img Singularity
    )
    s.args = [vagrantIP]
  end

  # config.vm.provision "shell", inline: "sudo singularity run ga4gh-server.img"

  # config.vm.provision "shell", inline: "sudo singularity run keycloak.img"    

end
